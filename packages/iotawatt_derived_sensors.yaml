template:

#############################
#   Calculates the energy consumed on wall power outlets GPO 2 / Phase A, after deducting:
#   - Study UPS
#
  - sensor:
    - name: "GPO 2A - Filtered"
      unique_id: gpo_2a_filtered
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: >
        {% set total = states('sensor.gpo_2a_wh') | float / 1000 %}
        {% set filtered = states('sensor.ups_study_energy_daily')| float(0) %}
        {{ [ total - filtered, 0 ] | max | round(3) }}

#      state: "{{ states('sensor.gpo_2a_kwh') | float(0) - states('sensor.ups_study_energy_daily') | float(0) | round(3) }}"

#############################
#   Calculates the energy consumed on wall power outlets GPO 3 / Phase B, after deducting:
#   - Laundry / Clothes Dryer
#   - 
#
  - sensor:
    - name: "GPO 3B - Filtered"
      unique_id: gpo_3b_filtered
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: >
        {% set total = states('sensor.gpo_3b_wh') | float / 1000 %}
        {% set filtered = states('sensor.clothes_dryer_energy_daily')| float(0) %}
        {{ [ total - filtered, 0 ] | max | round(3) }}

#      state: "{{ states('sensor.gpo_3b_kwh') | float(0) - states('sensor.clothes_dryer_energy_daily') | float(0) | round(3) }}"

#############################
#   Calculates the energy consumed on wall power outlets GPO 1 / Phase C, after deducting:
#   - Network Rack, Server Rack and Rack Fan Daily Energy sensors
#   - Dish Washing Machine sensor.dishwasher_energy_daily
#   - Oven
#

  - sensor:
    - name: "GPO 1C - Filtered"
      unique_id: gpo_1c_filtered
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: >
        {% set total = states('sensor.gpo_1c_wh') | float / 1000 %}
        {% set filtered = ( states('sensor.network_rack_fan_energy_daily')| float(0) + states('sensor.ups_network_rack_energy_daily')| float(0) + states('sensor.ups_servers_energy_daily')| float(0) + states('sensor.oven_c_kwh')| float(0) ) %}
        {{ [ total - filtered, 0 ] | max | round(3) }}

#      state: "{{ states('sensor.gpo_1c_kwh') | float(0) - states('sensor.network_rack_fan_energy_daily') | float(0) - states('sensor.ups_network_rack_energy_daily') | float(0)  - states('sensor.ups_servers_energy_daily') | float(0) - states('sensor.oven_c_kwh') | float(0) | round(3) }}"

#############################
#   Calculates the energy consumed by household lights, after deducting:
#   - IXL 3in1 All Bathroom (that is a sum of sensor containing the sum helpers that add up each bathrooms energy sensors
#

#  - sensor:
#    - name: "Lights - Phase A - kWh"
#      unique_id: derived_lights_kwh
#      unit_of_measurement: "kWh"
#      device_class: "energy"
#      state_class: total
#      state: "{{ states('sensor.lights_a_wh') | float(0) - states('sensor.ixl_3in1_all_bathroom') | float(0) | round(3) }}"
#      state: "{{ states('sensor.lights_ab_wh_to_kwh') | float(0) - states('sensor.ixl_3in1_all_bathroom') | float(0) | round(3) }}"

#############################
#   Conversion for IoTaWATT to convert lights_ab_wh as a new sensor in kWh.
#   The new sensor.lights_a_wh_to_kwh is then used in derived sensor derived_lights_kwh, to calculate kWh usage for lights.
#   Required as original WH sensor from IoTaWatt when set to kWh output, provides a negative output in Energy Dashboard
#

  - sensor:
    - name: "GPO 1C - kWh"
      unique_id: gpo_1c_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.gpo_1c_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "GPO 2A - kWh"
      unique_id: gpo_2a_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.gpo_2a_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "GPO 3B - kWh"
      unique_id: gpo_3b_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.gpo_3b_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Lights A - kWh"  # Rename in GUI to: Lights - kWh Daily
      unique_id: lights_a_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.lights_a_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Aircon - kWh"  # Rename in GUI to: Air Conditioner - kWh Daily
      unique_id: aircon_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.aircon_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Oven C - kWh"  # Rename in GUI to: Oven - kWh Daily
      unique_id: oven_c_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.oven_c_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Consume - kWh"  # Rename in GUI to: Consumption - kWh Daily
      unique_id: consume_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.consume_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Cons Self - kWh"  # Rename in GUI to: Consumption (Self) - kWh Daily
      unique_id: cons_self_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.cons_self_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Grid - Net kWh"  # Rename in GUI to: "Grid - NET kWh Daily"
      unique_id: grid_net_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.grid_net_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Grid - Export kWh"     # Rename in GUI to: "Grid Export - kWh Daily"
      unique_id: grid_export_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.grid_export_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Grid - Import kWh"     # Rename in GUI to: "Grid Import - kWh Daily"
      unique_id: grid_import_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.grid_import_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Misc - kWh"  # Rename in GUI to: Miscellaneous - kWh Daily
      unique_id: misc_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.misc_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline

  - sensor:
    - name: "Total Load - kWh"  # Rename in GUI to: Total Load - kWh Daily
      unique_id: total_load_kwh
      unit_of_measurement: "kWh"
      device_class: "energy"
      state_class: total
      state: "{{ [ ( states('sensor.total_load_wh') | float / 1000), 0 ] | max | round(3) }}"
      icon: mdi:lightning-bolt-outline


#############################


